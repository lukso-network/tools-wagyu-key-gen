name: CI

on:
  push:
    branches:
      - "**"
    tags:
      - "*"

jobs:
  build-native:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            runner: ubuntu-latest
          - os: macos
            runner: macos-11
          - os: windows
            runner: windows-latest
    env:
      PYTHONHASHSEED: 42
      GH_TOKEN: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Set variables
        run: |
          echo "VERSION=$(node -e 'console.log(require("./package.json").version)')" >> $GITHUB_ENV
      - name: Install building requirements on ${{ matrix.os }}
        run: |
          corepack enable
          pip3 install --upgrade pip
          pip3 install -r src/vendors/tools-staking-deposit-cli/requirements.txt
          pip3 install pyinstaller
          yarn install
          yarn install
          yarn build
          yarn buildcli
          yarn dist
      - name: Upload binary (appimage)
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'windows' }}
        with:
          name: ${{ matrix.os }}-${{ env.VERSION }}
          path: dist/Wagyu Key Gen*.AppImage
      - name: Upload binary (dmg)
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'macos' }}
        with:
          name: ${{ matrix.os }}-${{ env.VERSION }}
          path: dist/Wagyu Key Gen*.dmg
      - name: Upload binary (exe)
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'windows' }}
        with:
          name: ${{ matrix.os }}-${{ env.VERSION }}
          path: dist/Wagyu Key Gen*.exe